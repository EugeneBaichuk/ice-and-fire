{"ast":null,"code":"const path = \"https://www.anapioficeandfire.com/api/\"; //запрос к серверу за данными \n\nexport async function getData(url) {\n  const res = await fetch(`${path}${url}`);\n  if (!res.ok) new Error(`Could not fetch ${url}` + `, received ${res.status}`);\n  return res.json();\n}\nexport async function getDataLink(url) {\n  const res = await fetch(`${url}`);\n  if (!res.ok) new Error(`Could not fetch ${url}` + `, received ${res.status}`);\n  return res.json();\n} //запрос с пагинацией page-к какой странице запрос, pageSize-сколько элементов на странице\n\nexport default class IceandfireApi {\n  static async getBooks(page, pageSize) {\n    return await getData(`/books?page=${page}&pageSize=${pageSize}`);\n  }\n\n  static async getCharacters(page, pageSize) {\n    const params = page && pageSize ? `?page=${page}&pageSize=${pageSize}` : '';\n    return await getData(`/characters${params}`);\n  }\n\n  static async getCharterInfo(url) {\n    return await getDataLink(url);\n  }\n\n}","map":{"version":3,"names":["path","getData","url","res","fetch","ok","Error","status","json","getDataLink","IceandfireApi","getBooks","page","pageSize","getCharacters","params","getCharterInfo"],"sources":["C:/Users/Виктория/Desktop/Женя Work/ice-and-fire-hooks/src/services/iceandfire.ts"],"sourcesContent":["import { Book, Character } from \"../types/type\";\n\nconst path = \"https://www.anapioficeandfire.com/api/\";\n\n//запрос к серверу за данными \nexport async function getData(url: string): Promise<any> {\n  const res = await fetch(`${path}${url}`);\n  if (!res.ok) new Error(`Could not fetch ${url}` + `, received ${res.status}`)\n  return res.json();\n}\nexport async function getDataLink(url: string): Promise<any> {\n  const res = await fetch(`${url}`);\n  if (!res.ok) new Error(`Could not fetch ${url}` + `, received ${res.status}`)\n  return res.json();\n}\n\n//запрос с пагинацией page-к какой странице запрос, pageSize-сколько элементов на странице\nexport default class IceandfireApi {\n  static async getBooks(page: number, pageSize: number): Promise<Book[]> {\n    return await getData(`/books?page=${page}&pageSize=${pageSize}`);\n  }\n  static async getCharacters(page?: number, pageSize?: number): Promise<Character[]> {\n    const params = page && pageSize ? `?page=${page}&pageSize=${pageSize}` : ''\n    return await getData(`/characters${params}`);\n  }\n  static async getCharterInfo(url: string): Promise<Character> {\n    return await getDataLink(url);\n  }\n}\n\n"],"mappings":"AAEA,MAAMA,IAAI,GAAG,wCAAb,C,CAEA;;AACA,OAAO,eAAeC,OAAf,CAAuBC,GAAvB,EAAkD;EACvD,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEJ,IAAK,GAAEE,GAAI,EAAf,CAAvB;EACA,IAAI,CAACC,GAAG,CAACE,EAAT,EAAa,IAAIC,KAAJ,CAAW,mBAAkBJ,GAAI,EAAvB,GAA4B,cAAaC,GAAG,CAACI,MAAO,EAA9D;EACb,OAAOJ,GAAG,CAACK,IAAJ,EAAP;AACD;AACD,OAAO,eAAeC,WAAf,CAA2BP,GAA3B,EAAsD;EAC3D,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEF,GAAI,EAAR,CAAvB;EACA,IAAI,CAACC,GAAG,CAACE,EAAT,EAAa,IAAIC,KAAJ,CAAW,mBAAkBJ,GAAI,EAAvB,GAA4B,cAAaC,GAAG,CAACI,MAAO,EAA9D;EACb,OAAOJ,GAAG,CAACK,IAAJ,EAAP;AACD,C,CAED;;AACA,eAAe,MAAME,aAAN,CAAoB;EACZ,aAARC,QAAQ,CAACC,IAAD,EAAeC,QAAf,EAAkD;IACrE,OAAO,MAAMZ,OAAO,CAAE,eAAcW,IAAK,aAAYC,QAAS,EAA1C,CAApB;EACD;;EACyB,aAAbC,aAAa,CAACF,IAAD,EAAgBC,QAAhB,EAAyD;IACjF,MAAME,MAAM,GAAGH,IAAI,IAAIC,QAAR,GAAoB,SAAQD,IAAK,aAAYC,QAAS,EAAtD,GAA0D,EAAzE;IACA,OAAO,MAAMZ,OAAO,CAAE,cAAac,MAAO,EAAtB,CAApB;EACD;;EAC0B,aAAdC,cAAc,CAACd,GAAD,EAAkC;IAC3D,OAAO,MAAMO,WAAW,CAACP,GAAD,CAAxB;EACD;;AAVgC"},"metadata":{},"sourceType":"module"}