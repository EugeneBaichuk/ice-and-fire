{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0412\\u0438\\u043A\\u0442\\u043E\\u0440\\u0438\\u044F\\\\Desktop\\\\\\u0416\\u0435\\u043D\\u044F Work\\\\ice-and-fire-hooks\\\\src\\\\characters\\\\characters-f.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useMemo, useState } from \"react\";\nimport IceandfireApi from \"../services/iceandfire\";\nimport { Button, ButtonGroup, ListGroup } from \"react-bootstrap\";\nimport { useCharters } from \"./charters.hooks\";\nimport CharterModal from \"./character.modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CharactersF = () => {\n  _s();\n\n  const {\n    error,\n    loading,\n    characters,\n    filter,\n    handlerPage\n  } = useCharters({\n    initPage: 1,\n    initPageSize: 5\n  });\n  log;\n  const [character, setCharacter] = useState(null);\n  const [loadingCharacter, setLoadingCharacter] = useState(false);\n  const [errorCharacter, setErrorCharacter] = useState(false);\n  const [modalIsVisible, setModalIsVisible] = useState(false);\n  const [characterUrl, setCharacterUrl] = useState(null);\n  console.log('render loading', loading); // const list: any[] = []\n\n  const list = useMemo(() => {\n    console.log('useMemo');\n    return [];\n  }, [characterUrl]);\n  console.log('list', list);\n\n  const handleModal = type => () => {\n    setModalIsVisible(type);\n    if (!type) setCharacterUrl(null);\n  };\n\n  const handleModalMemorized = useCallback(type => () => {\n    setModalIsVisible(type);\n    if (!type) setCharacterUrl(null);\n  }, [characterUrl]);\n\n  const handlerClickCharacter = url => {\n    return async () => {\n      setLoadingCharacter(true);\n\n      try {\n        const res = await IceandfireApi.getCharterInfo(url);\n        setCharacter(res);\n        handleModal(true)();\n      } catch (e) {\n        setErrorCharacter(true);\n      } finally {\n        setLoadingCharacter(false);\n      }\n    };\n  }; // const handlerClickCharacter = (url: string) => {\n  //   return async() => {\n  //     setCharacterUrl(url)\n  //     setModalIsVisible(true)\n  // }}\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"characters\",\n    children: [/*#__PURE__*/_jsxDEV(ListGroup, {\n      children: [error && \"Error\", loading && \"Loading\", characters && !error && !loading && characters.map(el => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        as: \"li\",\n        onClick: handlerClickCharacter(el.url),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"title\",\n          children: el.name || el.aliases\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"prop\",\n          children: [\"Gender: \", el.gender]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 19\n        }, this)]\n      }, el.url, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), characters && !error && /*#__PURE__*/_jsxDEV(ButtonGroup, {\n      className: \"books-nav\",\n      \"aria-label\": \"Basic example\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        disabled: filter.page === 1,\n        onClick: handlerPage(\"left\"),\n        children: \"left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: handlerPage(\"right\"),\n        children: \"right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(CharterModal, {\n      list: list,\n      characterUrl: characterUrl,\n      modalIsVisible: modalIsVisible,\n      handleModal: handleModalMemorized\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CharactersF, \"nQ6YhWg190LcWiJlHklOrcg5x5s=\", false, function () {\n  return [useCharters];\n});\n\n_c = CharactersF;\nexport default CharactersF;\n\nvar _c;\n\n$RefreshReg$(_c, \"CharactersF\");","map":{"version":3,"names":["React","useCallback","useMemo","useState","IceandfireApi","Button","ButtonGroup","ListGroup","useCharters","CharterModal","CharactersF","error","loading","characters","filter","handlerPage","initPage","initPageSize","log","character","setCharacter","loadingCharacter","setLoadingCharacter","errorCharacter","setErrorCharacter","modalIsVisible","setModalIsVisible","characterUrl","setCharacterUrl","console","list","handleModal","type","handleModalMemorized","handlerClickCharacter","url","res","getCharterInfo","e","map","el","name","aliases","gender","page"],"sources":["C:/Users/Виктория/Desktop/Женя Work/ice-and-fire-hooks/src/characters/characters-f.tsx"],"sourcesContent":["import { Character } from \"../types/type\";\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport IceandfireApi from \"../services/iceandfire\";\nimport { Button, ButtonGroup, ListGroup, Modal } from \"react-bootstrap\";\nimport {useCharters} from \"./charters.hooks\";\nimport CharterModal from \"./character.modal\";\n\n\n\nconst CharactersF = () => {\n  const {\n    error, loading, characters, filter, handlerPage\n  } = useCharters({initPage: 1, initPageSize: 5});\n\n  log\n\n  const [character, setCharacter] = useState<null | Character>(null)\n  const [loadingCharacter, setLoadingCharacter] = useState<boolean>(false)\n  const [errorCharacter, setErrorCharacter] = useState<boolean>(false)\n\n  const [modalIsVisible, setModalIsVisible] = useState<boolean>(false)\n  const [characterUrl, setCharacterUrl] = useState<string | null>(null)\n  \n  console.log('render loading', loading);\n  \n  // const list: any[] = []\n  const list: any[] = useMemo(() => {\n    console.log('useMemo');\n    \n    return []\n  }, [characterUrl])\n\n  console.log('list', list);\n  \n\n  const handleModal = (type: boolean) => () => {\n    setModalIsVisible(type)\n    if (!type) setCharacterUrl(null)\n  }\n  const handleModalMemorized = useCallback((type: boolean) => () => {\n    setModalIsVisible(type)\n    if (!type) setCharacterUrl(null)\n  }, [characterUrl])\n  \n  const handlerClickCharacter = (url: string) => {\n    return async() => {\n      setLoadingCharacter(true)\n      try {\n        const res = await IceandfireApi.getCharterInfo(url)\n        setCharacter(res)\n        handleModal(true)()\n      } catch (e) {\n        setErrorCharacter(true)\n      } finally {\n        setLoadingCharacter(false)\n      }\n    }\n  }\n\n  // const handlerClickCharacter = (url: string) => {\n  //   return async() => {\n  //     setCharacterUrl(url)\n  //     setModalIsVisible(true)\n  // }}\n  \n  \n  return (\n    <div className=\"characters\">\n      <ListGroup>\n          {error && \"Error\"}\n          {loading && \"Loading\"}\n          {characters &&\n            !error &&\n            !loading &&\n            characters.map((el: Character) => (\n              <ListGroup.Item \n                  as=\"li\" \n                  key={el.url} \n                  onClick={handlerClickCharacter(el.url)}\n                >\n                  <span className=\"title\">{el.name || el.aliases}</span>\n                  <span className=\"prop\">Gender: {el.gender}</span>\n              </ListGroup.Item>\n            ))\n        }\n      </ListGroup>\n        {characters && !error && (\n          <ButtonGroup className=\"books-nav\" aria-label=\"Basic example\" >\n            <Button\n              variant=\"secondary\"\n              disabled={filter.page === 1}\n              onClick={handlerPage(\"left\")}\n            >\n              left\n            </Button>\n            <Button\n              variant=\"secondary\"\n              onClick={handlerPage(\"right\")}>\n              right\n            </Button>\n          </ButtonGroup>\n        )}\n        <CharterModal \n          list={list}\n          characterUrl={characterUrl} \n          modalIsVisible={modalIsVisible} \n          handleModal={handleModalMemorized} />\n        {/* <Modal show={modalIsVisible} onHide={handleModal(false)}>\n          <Modal.Header closeButton>\n            <Modal.Title>{character?.name}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            {character && (\n                <>\n                  <span className=\"title\">Name:</span>{character?.name}\n                </>\n            )}\n\n            <span className=\"prop\">Gender:</span>{character?.gender}\n            <span className=\"prop\">Aliases:</span>{character?.aliases}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleModal(false)}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={handleModal(true)}>\n              Save Changes\n            </Button>\n          </Modal.Footer>\n        </Modal> */}\n    </div>\n  )\n}\nexport default CharactersF;"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,WAAhB,EAAwCC,OAAxC,EAAiDC,QAAjD,QAAiE,OAAjE;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,SAA9B,QAAsD,iBAAtD;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;;AAIA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACxB,MAAM;IACJC,KADI;IACGC,OADH;IACYC,UADZ;IACwBC,MADxB;IACgCC;EADhC,IAEFP,WAAW,CAAC;IAACQ,QAAQ,EAAE,CAAX;IAAcC,YAAY,EAAE;EAA5B,CAAD,CAFf;EAIAC,GAAG;EAEH,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAmB,IAAnB,CAA1C;EACA,MAAM,CAACkB,gBAAD,EAAmBC,mBAAnB,IAA0CnB,QAAQ,CAAU,KAAV,CAAxD;EACA,MAAM,CAACoB,cAAD,EAAiBC,iBAAjB,IAAsCrB,QAAQ,CAAU,KAAV,CAApD;EAEA,MAAM,CAACsB,cAAD,EAAiBC,iBAAjB,IAAsCvB,QAAQ,CAAU,KAAV,CAApD;EACA,MAAM,CAACwB,YAAD,EAAeC,eAAf,IAAkCzB,QAAQ,CAAgB,IAAhB,CAAhD;EAEA0B,OAAO,CAACX,GAAR,CAAY,gBAAZ,EAA8BN,OAA9B,EAdwB,CAgBxB;;EACA,MAAMkB,IAAW,GAAG5B,OAAO,CAAC,MAAM;IAChC2B,OAAO,CAACX,GAAR,CAAY,SAAZ;IAEA,OAAO,EAAP;EACD,CAJ0B,EAIxB,CAACS,YAAD,CAJwB,CAA3B;EAMAE,OAAO,CAACX,GAAR,CAAY,MAAZ,EAAoBY,IAApB;;EAGA,MAAMC,WAAW,GAAIC,IAAD,IAAmB,MAAM;IAC3CN,iBAAiB,CAACM,IAAD,CAAjB;IACA,IAAI,CAACA,IAAL,EAAWJ,eAAe,CAAC,IAAD,CAAf;EACZ,CAHD;;EAIA,MAAMK,oBAAoB,GAAGhC,WAAW,CAAE+B,IAAD,IAAmB,MAAM;IAChEN,iBAAiB,CAACM,IAAD,CAAjB;IACA,IAAI,CAACA,IAAL,EAAWJ,eAAe,CAAC,IAAD,CAAf;EACZ,CAHuC,EAGrC,CAACD,YAAD,CAHqC,CAAxC;;EAKA,MAAMO,qBAAqB,GAAIC,GAAD,IAAiB;IAC7C,OAAO,YAAW;MAChBb,mBAAmB,CAAC,IAAD,CAAnB;;MACA,IAAI;QACF,MAAMc,GAAG,GAAG,MAAMhC,aAAa,CAACiC,cAAd,CAA6BF,GAA7B,CAAlB;QACAf,YAAY,CAACgB,GAAD,CAAZ;QACAL,WAAW,CAAC,IAAD,CAAX;MACD,CAJD,CAIE,OAAOO,CAAP,EAAU;QACVd,iBAAiB,CAAC,IAAD,CAAjB;MACD,CAND,SAMU;QACRF,mBAAmB,CAAC,KAAD,CAAnB;MACD;IACF,CAXD;EAYD,CAbD,CAnCwB,CAkDxB;EACA;EACA;EACA;EACA;;;EAGA,oBACE;IAAK,SAAS,EAAC,YAAf;IAAA,wBACE,QAAC,SAAD;MAAA,WACKX,KAAK,IAAI,OADd,EAEKC,OAAO,IAAI,SAFhB,EAGKC,UAAU,IACT,CAACF,KADF,IAEC,CAACC,OAFF,IAGCC,UAAU,CAAC0B,GAAX,CAAgBC,EAAD,iBACb,QAAC,SAAD,CAAW,IAAX;QACI,EAAE,EAAC,IADP;QAGI,OAAO,EAAEN,qBAAqB,CAACM,EAAE,CAACL,GAAJ,CAHlC;QAAA,wBAKI;UAAM,SAAS,EAAC,OAAhB;UAAA,UAAyBK,EAAE,CAACC,IAAH,IAAWD,EAAE,CAACE;QAAvC;UAAA;UAAA;UAAA;QAAA,QALJ,eAMI;UAAM,SAAS,EAAC,MAAhB;UAAA,uBAAgCF,EAAE,CAACG,MAAnC;QAAA;UAAA;UAAA;UAAA;QAAA,QANJ;MAAA,GAESH,EAAE,CAACL,GAFZ;QAAA;QAAA;QAAA;MAAA,QADF,CANN;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAmBKtB,UAAU,IAAI,CAACF,KAAf,iBACC,QAAC,WAAD;MAAa,SAAS,EAAC,WAAvB;MAAmC,cAAW,eAA9C;MAAA,wBACE,QAAC,MAAD;QACE,OAAO,EAAC,WADV;QAEE,QAAQ,EAAEG,MAAM,CAAC8B,IAAP,KAAgB,CAF5B;QAGE,OAAO,EAAE7B,WAAW,CAAC,MAAD,CAHtB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAQE,QAAC,MAAD;QACE,OAAO,EAAC,WADV;QAEE,OAAO,EAAEA,WAAW,CAAC,OAAD,CAFtB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QARF;IAAA;MAAA;MAAA;MAAA;IAAA,QApBN,eAmCI,QAAC,YAAD;MACE,IAAI,EAAEe,IADR;MAEE,YAAY,EAAEH,YAFhB;MAGE,cAAc,EAAEF,cAHlB;MAIE,WAAW,EAAEQ;IAJf;MAAA;MAAA;MAAA;IAAA,QAnCJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkED,CA3HD;;GAAMvB,W;UAGAF,W;;;KAHAE,W;AA4HN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}